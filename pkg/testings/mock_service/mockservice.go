// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/ports/service.go

// Package mockservice is a generated GoMock package.
package mockservice

import (
	domain "hugeman/internal/core/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateTodo mocks base method.
func (m *MockService) CreateTodo(request domain.TodoRequest) (*domain.TodoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTodo", request)
	ret0, _ := ret[0].(*domain.TodoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockServiceMockRecorder) CreateTodo(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockService)(nil).CreateTodo), request)
}

// DeleteTodo mocks base method.
func (m *MockService) DeleteTodo(request domain.TodoRequest) (*domain.TodoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTodo", request)
	ret0, _ := ret[0].(*domain.TodoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTodo indicates an expected call of DeleteTodo.
func (mr *MockServiceMockRecorder) DeleteTodo(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTodo", reflect.TypeOf((*MockService)(nil).DeleteTodo), request)
}

// GetTodo mocks base method.
func (m *MockService) GetTodo(condition domain.QueryTodoRequest) (*domain.TodoListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTodo", condition)
	ret0, _ := ret[0].(*domain.TodoListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTodo indicates an expected call of GetTodo.
func (mr *MockServiceMockRecorder) GetTodo(condition interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodo", reflect.TypeOf((*MockService)(nil).GetTodo), condition)
}

// UpdateTodo mocks base method.
func (m *MockService) UpdateTodo(request domain.TodoRequest) (*domain.TodoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTodo", request)
	ret0, _ := ret[0].(*domain.TodoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTodo indicates an expected call of UpdateTodo.
func (mr *MockServiceMockRecorder) UpdateTodo(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTodo", reflect.TypeOf((*MockService)(nil).UpdateTodo), request)
}
